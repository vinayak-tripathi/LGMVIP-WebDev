{"version":3,"sources":["Components/card.js","App.js","reportWebVitals.js","index.js"],"names":["Users","loading","users","id","src","alt","className","map","user","avatar","first_name","last_name","email","App","props","state","greeting","updateState","bind","console","log","document","getElementById","style","display","fetch","then","response","json","setState","data","catch","error","onClick","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sOA0BeA,EAxBD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,MACpB,OAAOD,EACD,qBAAKE,GAAG,OAAR,SACE,qBAAKC,IAAI,uEAAuEC,IAAI,aAAaC,UAAU,aAI7G,qBAAKA,UAAU,MAAMH,GAAG,OAAxB,SAECD,EAAMK,KAAI,SAAAC,GAAI,OACH,qBAAKF,UAAU,oBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKF,IAAKI,EAAKC,OAAQJ,IAAKG,EAAKC,OAAQH,UAAU,WACnD,qBAAIA,UAAU,OAAd,UAAsBE,EAAKE,WAA3B,IAAwCF,EAAKG,aAC7C,mBAAGL,UAAU,QAAb,SAAsBE,EAAKI,QAC3B,0CAAaJ,EAAKL,iBCiC7BU,G,wDA5Cb,WAAYC,GAAO,IAAD,8BACnB,cAAMA,IAGDC,MAAQ,CAACC,SAAU,GACTf,SAAU,GAIzB,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBATA,E,+CAYlB,WAAc,IAAD,OACTC,QAAQC,IAAI,MACZC,SAASC,eAAe,QAAQC,MAAMC,QAAQ,OAE9CC,MADW,sCAEVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACxB,GAEL,EAAK2B,SAAS,CAACb,SAAUd,EAAM4B,KACf7B,SAAS,IAEzBkB,QAAQC,IAAIlB,EAAM4B,SAEnBC,OAAM,SAACC,GACNb,QAAQa,MAAMA,Q,oBAIpB,WACE,OAAQ,qCACN,qBAAK1B,UAAU,uCAAf,SACI,sBAAKA,UAAU,kBAAf,UACE,8CACA,wBAAQ2B,QAASC,KAAKjB,YAAtB,4BAGN,cAAC,EAAD,CAAOhB,QAASiC,KAAKnB,MAAMd,QAASC,MAAOgC,KAAKnB,MAAMC,kB,GAvC1CmB,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.7bbf85f2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Users = ({loading,users}) => {\r\n    return loading ? (   //Checkif if is loading\r\n          <div id=\"main\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"Loaading..\" className=\"loader\"/>\r\n          </div>\r\n        ) : \r\n        (\r\n          <div className='row' id=\"main\">\r\n    \r\n          {users.map(user =>\r\n                      <div className=\"col-sm-6 col-md-4\">\r\n                        <div className=\"profile\">\r\n                          <img src={user.avatar} alt={user.avatar} className=\"avatar\"></img>\r\n                          <h1 className=\"name\">{user.first_name} {user.last_name}</h1>\r\n                          <p className=\"title\">{user.email}</p>\r\n                          <p>User ID: {user.id}</p>\r\n                        </div>\r\n                      </div>\r\n            )\r\n          }\r\n          </div>\r\n        )\r\n}\r\n\r\nexport default Users","import Users from \"./Components/card\";\nimport './App.css';\n\nimport React, { Component } from 'react'\n\t\nclass App extends Component {\n  constructor(props){\n\tsuper(props)\n\t\t\n\t// Set initial state\n\tthis.state = {greeting :[],\n                loading : true                \n  }\n  \n\t// Binding this keyword\n\tthis.updateState = this.updateState.bind(this)\n  }\n    \n  updateState(){\n      console.log(\"VT\");\n      document.getElementById(\"main\").style.display='flex';\n      const link=\"https://reqres.in/api/users?page=1\";\n      fetch(link)\n      .then(response => response.json())\n      .then((users) => {\n        \n        this.setState({greeting :users.data,\n                        loading: false\n        })\n        console.log(users.data);\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n    \n  render(){\n    return (<>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <div className=\"container-fluid\">\n            <h3>LetsGrowMore</h3>\n            <button onClick={this.updateState}>Get Users</button>\n          </div>\n        </nav>\n      <Users loading={this.state.loading} users={this.state.greeting}/>\n    </>\n    )\n  }\n}\n\t\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}